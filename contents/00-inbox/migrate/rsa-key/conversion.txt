Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.4
Creation-Date: 2017-01-16T23:27:40+01:00

====== conversion ======
Created Monday 16 January 2017

====== Putty > OpenSSH ======

===== Puttygen method =====
@puttygen supports @exporting your private key to an @openssh compatible format.  You can then use OpenSSH tools to recreate the public key.

 1. Open PuttyGen
 1. Click Load
 1. Load your private key
 1. Go to `Conversions->Export OpenSSH` and export your private key
 1. Copy your private key to `~/.ssh/id_dsa` (or `id_rsa`).
 1. Create the RFC 4716 version of the public key using `ssh-keygen`

		ssh-keygen -e -f ~/.ssh/id_dsa > ~/.ssh/id_dsa_com.pub

 1. Convert the RFC 4716 version of the public key to the OpenSSH format:

		ssh-keygen -i -f ~/.ssh/id_dsa_com.pub > ~/.ssh/id_dsa.pub

See [this][1] and [this][2] for more information.


  [1]: http://linux-sxs.org/networking/openssh.putty.html
  [2]: http://www.wellsi.com/sme/ssh/ssh.html
 
> REFERENCE: https://stackoverflow.com/questions/2224066/how-to-convert-ssh-keypairs-generated-using-puttygenwindows-into-key-pairs-use/2224204#2224204

## OpenSSH method

`# ssh-keygen -i -f puttygen_key > openssh_key`

Afterwards you can copy the contents of `openssh_key` in to `.ssh/authorized_keys` just as with a normal SSH key.

The `-i` option is the one that tells `ssh-keygen` to do the conversion.  The `-f` option tells it where to find the key to convert.

This works for **unencrypted** keys.  The public key is unencrypted, but the private one is probably encrypted.  I'm not sure if it there's a way to unencrypt the private key, convert it, and then recrypt it.  It may well be easier to use new keys as the other answer suggests (and I'd recommend using `ssh-agent` though that's orthogonal to the current issue).

> REFERENCE: https://askubuntu.com/questions/15378/how-do-i-install-a-ssh-private-key-generated-by-puttygen/15402#15402

# OpenSSH > Putty 
